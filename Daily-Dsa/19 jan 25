first problem : 
import java.util.*;

public class Main {

    public static int countMaximumWays(int[] a, int[] b, int[] c) {
        int n = a.length;
        int[] dpa = new int[n];
        int[] dpb = new int[n];
        int[] dpc = new int[n];

        dpa[0] = a[0];
        dpb[0] = b[0];
        dpc[0] = c[0];

        for (int i = 1; i < n; i++) {
            dpa[i] = a[i] + Math.max(dpc[i - 1], dpb[i - 1]);
            dpb[i] = b[i] + Math.max(dpa[i - 1], dpc[i - 1]);
            dpc[i] = c[i] + Math.max(dpa[i - 1], dpb[i - 1]);
        }

        int ans = Math.max(dpa[n - 1], Math.max(dpb[n - 1], dpc[n - 1]));
        return ans;
    }

    public static void main(String[] args) {
        // Sample input arrays
        int[] a = {1, 2, 3, 4, 5};
        int[] b = {5, 4, 3, 2, 1};
        int[] c = {2, 3, 4, 5, 6};

        // Call the function and print the result
        int result = countMaximumWays(a, b, c);
        System.out.println("Maximum ways: " + result);
    }
}



problem 2 : if only two consective are allowed 

import java.util.*;

public class Main {

    public static int countMaximumWaysIf2Consecutive(int[] a, int[] b, int[] c) {
        int n = a.length;
        int[] dpa = new int[n];
        int[] dpb = new int[n];
        int[] dpc = new int[n];

        dpa[0] = a[0];
        dpb[0] = b[0];
        dpc[0] = c[0];

        for (int i = 1; i < n; i++) {
            dpa[i] = a[i] + Math.max(dpc[i - 1], dpb[i - 1]);
            if (i > 1) {
                dpa[i] = Math.max(dpa[i], a[i] + a[i - 1] + Math.max(dpb[i - 2], dpc[i - 2]));
            }

            dpb[i] = b[i] + Math.max(dpa[i - 1], dpc[i - 1]);
            if (i > 1) {
                dpb[i] = Math.max(dpb[i], b[i] + b[i - 1] + Math.max(dpa[i - 2], dpc[i - 2]));
            }

            dpc[i] = c[i] + Math.max(dpa[i - 1], dpb[i - 1]);
            if (i > 1) {
                dpc[i] = Math.max(dpc[i], c[i] + c[i - 1] + Math.max(dpa[i - 2], dpb[i - 2]));
            }
        }

        int ans = Math.max(dpa[n - 1], Math.max(dpb[n - 1], dpc[n - 1]));
        return ans;
    }

    public static void main(String[] args) {
        // Sample input arrays
        int[] a = {1, 2, 3, 4, 5};
        int[] b = {5, 4, 3, 2, 1};
        int[] c = {2, 3, 4, 5, 6};

        // Call the function and print the result
        int result = countMaximumWaysIf2Consecutive(a, b, c);
        System.out.println("Maximum ways: " + result);
    }
}
